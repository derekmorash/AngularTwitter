/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
@import url(https://fonts.googleapis.com/css?family=Fira+Sans:400,300,400italic,700);
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

html {
  box-sizing: border-box;
}

*, *::after, *::before {
  box-sizing: inherit;
}

html {
  font-size: 18px;
}

body {
  font-family: "Fira Sans", sans-serif;
  background-color: #F9F9F9;
  color: #292929;
  -webkit-font-smoothing: antialiased;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0.4em 0;
  line-height: 1.2em;
  color: #101010;
}

h1 {
  font-size: 2rem;
}

@media screen and (max-width: 600px) {
  h1 {
    font-size: 1.6rem;
  }
}

h2 {
  font-size: 1.8rem;
}

@media screen and (max-width: 600px) {
  h2 {
    font-size: 1.4rem;
  }
}

h3 {
  font-size: 1.6rem;
}

@media screen and (max-width: 600px) {
  h3 {
    font-size: 1.2rem;
  }
}

h4 {
  font-size: 1.4rem;
}

@media screen and (max-width: 600px) {
  h4 {
    font-size: 1rem;
  }
}

h5 {
  font-size: 1.2rem;
}

@media screen and (max-width: 600px) {
  h5 {
    font-size: 0.8rem;
  }
}

h6 {
  font-size: 1rem;
}

@media screen and (max-width: 600px) {
  h6 {
    font-size: 0.8rem;
  }
}

p {
  margin: 0 0 1.2em;
  font-size: 1rem;
}

@media screen and (max-width: 600px) {
  p {
    font-size: 0.8rem;
  }
}

a {
  color: #44BBFF;
  text-decoration: none;
  -webkit-transition: color ease 100ms;
  transition: color ease 100ms;
}

a:active, a:focus, a:hover {
  color: #338cbf;
}

hr {
  border-bottom: 1px solid #c2c2c2;
  border-left: 0;
  border-right: 0;
  border-top: 0;
  margin: 1em 0;
}

img,
picture {
  margin: 0;
  max-width: 100%;
}

fieldset {
  background-color: transparent;
  border: 0;
  margin: 0;
  padding: 0;
}

label {
  display: block;
  font-weight: 600;
  margin-bottom: 20px;
}

input[type="color"], input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="email"], input[type="month"], input[type="number"], input[type="password"], input[type="search"], input[type="tel"], input[type="text"], input[type="time"], input[type="url"], input[type="week"], input:not([type]), textarea,
select[multiple] {
  background-color: #F9F9F9;
  border: 1px solid #c2c2c2;
  border-radius: 0.2em;
  box-sizing: border-box;
  margin-bottom: 20px;
  padding: 10px;
  -webkit-transition: border-color ease 100ms;
  transition: border-color ease 100ms;
  width: 100%;
  overflow: hidden;
}

input[type="color"]:hover, input[type="date"]:hover, input[type="datetime"]:hover, input[type="datetime-local"]:hover, input[type="email"]:hover, input[type="month"]:hover, input[type="number"]:hover, input[type="password"]:hover, input[type="search"]:hover, input[type="tel"]:hover, input[type="text"]:hover, input[type="time"]:hover, input[type="url"]:hover, input[type="week"]:hover, input:not([type]):hover, textarea:hover,
select[multiple]:hover {
  border-color: #212121;
}

input[type="color"]:focus, input[type="date"]:focus, input[type="datetime"]:focus, input[type="datetime-local"]:focus, input[type="email"]:focus, input[type="month"]:focus, input[type="number"]:focus, input[type="password"]:focus, input[type="search"]:focus, input[type="tel"]:focus, input[type="text"]:focus, input[type="time"]:focus, input[type="url"]:focus, input[type="week"]:focus, input:not([type]):focus, textarea:focus,
select[multiple]:focus {
  border-color: #44BBFF;
  outline: none;
}

input[type="color"]:disabled, input[type="date"]:disabled, input[type="datetime"]:disabled, input[type="datetime-local"]:disabled, input[type="email"]:disabled, input[type="month"]:disabled, input[type="number"]:disabled, input[type="password"]:disabled, input[type="search"]:disabled, input[type="tel"]:disabled, input[type="text"]:disabled, input[type="time"]:disabled, input[type="url"]:disabled, input[type="week"]:disabled, input:not([type]):disabled, textarea:disabled,
select[multiple]:disabled {
  background-color: #ededed;
  border: 1px solid #c2c2c2;
  cursor: not-allowed;
}

textarea {
  resize: vertical;
}

[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

input[type="file"] {
  width: 0.1px;
  height: 0.1px;
  opacity: 0;
  overflow: hidden;
  position: absolute;
  z-index: -1;
}

label[for="file"], header nav .header--user .header--user-list .header--user-login, header nav .header--user .header--user-list .header--user-register, header nav .header--user .header--user-list .header--user-logout, button, input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #44BBFF;
  border: 0;
  border-radius: 0.2em;
  color: #fff;
  cursor: pointer;
  display: inline-block;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1;
  padding: 0.6em 1.4em;
  text-decoration: none;
  text-align: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
}

label[for="file"]:hover, header nav .header--user .header--user-list .header--user-login:hover, header nav .header--user .header--user-list .header--user-register:hover, header nav .header--user .header--user-list .header--user-logout:hover, label[for="file"]:focus, header nav .header--user .header--user-list .header--user-login:focus, header nav .header--user .header--user-list .header--user-register:focus, header nav .header--user .header--user-list .header--user-logout:focus, button:hover, button:focus, input[type="button"]:hover, input[type="button"]:focus, input[type="reset"]:hover, input[type="reset"]:focus, input[type="submit"]:hover, input[type="submit"]:focus {
  background-color: #3696cc;
  color: #fff;
}

label[for="file"]:disabled, header nav .header--user .header--user-list .header--user-login:disabled, header nav .header--user .header--user-list .header--user-register:disabled, header nav .header--user .header--user-list .header--user-logout:disabled, button:disabled, input[type="button"]:disabled, input[type="reset"]:disabled, input[type="submit"]:disabled {
  background-color: #44BBFF;
  cursor: not-allowed;
  opacity: 0.5;
}

label[for="file"]:disabled:hover, header nav .header--user .header--user-list .header--user-login:disabled:hover, header nav .header--user .header--user-list .header--user-register:disabled:hover, header nav .header--user .header--user-list .header--user-logout:disabled:hover, button:disabled:hover, input[type="button"]:disabled:hover, input[type="reset"]:disabled:hover, input[type="submit"]:disabled:hover {
  background-color: #44BBFF;
}

.error {
  color: red;
}

input.ng-invalid.ng-touched {
  border: 1px solid #DA3637;
}

input.ng-valid.ng-touched {
  border: 1px solid #509D12;
}

button.ng-invalid {
  background: #2F2F2F;
}

.main .main--login {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
}

.main .main--login::after {
  clear: both;
  content: "";
  display: table;
}

.main .main--login .main--login-about, .main .main--login .main--login-login {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 48.82117%;
}

.main .main--login .main--login-about:last-child, .main .main--login .main--login-login:last-child {
  margin-right: 0;
}

@media screen and (max-width: 900px) {
  .main .main--login .main--login-about, .main .main--login .main--login-login {
    float: left;
    display: block;
    margin-right: 2.35765%;
    width: 100%;
  }
  .main .main--login .main--login-about:last-child, .main .main--login .main--login-login:last-child {
    margin-right: 0;
  }
}

.main .main--login .main--login-about {
  margin-bottom: 2rem;
}

.main .main--login .main--login-about p {
  margin: 0;
}

.main .main--login .main--login-login {
  background-color: #fff;
  padding: 2rem;
  box-shadow: 0 2px 6px #c2c2c2;
  border-radius: 0.2em;
}

.main .main--register {
  background-color: #fff;
  padding: 2rem;
  box-shadow: 0 2px 6px #c2c2c2;
  border-radius: 0.2em;
  max-width: 900px;
  margin: 0 auto;
}

.main .main--register button.register--submit {
  background-color: #66CC99;
}

.main .main--register button.register--submit:hover, .main .main--register button.register--submit:focus {
  background-color: #52a37a;
}

.main .main--register button.register--submit:disabled {
  background-color: #66CC99;
}

.main .main--register button.register--submit:disabled:hover {
  background-color: #66CC99;
}

header {
  background-color: #fff;
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  box-shadow: 0 1px 6px #c2c2c2;
}

header::after {
  clear: both;
  content: "";
  display: table;
}

header nav {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding: 0.2rem 1rem;
}

header nav::after {
  clear: both;
  content: "";
  display: table;
}

@media screen and (max-width: 600px) {
  header nav {
    padding: 0.4rem;
  }
}

header nav .header--branding, header nav .header--user {
  margin: 1rem 0;
  padding: 0;
  display: block;
  float: left;
}

@media screen and (max-width: 600px) {
  header nav .header--branding, header nav .header--user {
    margin: 0.4rem 0;
  }
}

header nav .header--branding a {
  padding: 2px 0;
  font-size: 1.6rem;
  cursor: pointer;
}

@media screen and (max-width: 600px) {
  header nav .header--branding a {
    font-size: 1rem;
  }
}

header nav .header--user {
  float: right;
  list-style-type: none;
}

header nav .header--user .header--user-list {
  float: right;
  margin-left: 1rem;
}

@media screen and (max-width: 600px) {
  header nav .header--user .header--user-list {
    margin-left: 0.6rem;
  }
}

header nav .header--user .header--user-list .header--user-welcome {
  display: inline-block;
  padding-top: 0.6em;
  font-size: 1rem;
}

@media screen and (max-width: 600px) {
  header nav .header--user .header--user-list .header--user-welcome {
    font-size: 0.6rem;
  }
}

@media screen and (max-width: 600px) {
  header nav .header--user .header--user-list .header--user-login, header nav .header--user .header--user-list .header--user-register, header nav .header--user .header--user-list .header--user-logout {
    font-size: 0.6rem;
  }
}

header nav .header--user .header--user-list .header--user-register {
  background-color: #66CC99;
}

header nav .header--user .header--user-list .header--user-register:hover, header nav .header--user .header--user-list .header--user-register:focus {
  background-color: #52a37a;
}

header nav .header--user .header--user-list .header--user-logout {
  background-color: #FC575E;
}

header nav .header--user .header--user-list .header--user-logout:hover, header nav .header--user .header--user-list .header--user-logout:focus {
  background-color: #ca464b;
}

.main--wrapper {
  width: 100%;
  margin: 20px 0;
}

.main--wrapper .main {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}

/*# sourceMappingURL=data:application/json;base64, */
